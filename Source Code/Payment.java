/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;
import javax.swing.*;
import java.lang.Math;
import java.sql.*;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author SSN
 */
public class Payment extends javax.swing.JFrame {
    Connection con;
    Statement st ,st1, st2 , st3, st4 ;
    PreparedStatement ps;
    ResultSet rs , rs1 , rs2, rs3, rs4;
    String pnr , temp , tr_no;
    int amount , c1;
    /**
     * Creates new form Payment
     */
    public Payment() {
        initComponents();
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            //JOptionPane.showMessageDialog(this,"Driver Loaded!");
            try {
                con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","Mega477553");
                //JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
            }
            catch (SQLException ex) {
                Logger.getLogger(Payment.class.getName()).log(Level.SEVERE,null, ex);
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
        catch(ClassNotFoundException ex){
            Logger.getLogger(Payment.class.getName()).log(Level.SEVERE,null, ex);
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }

    public void payment(String pnr , int amount, String Tr_no , int count){
        this.pnr=pnr;
        this.amount=amount;
        this.tr_no=Tr_no;
        c1=count;
        Pnr.setText(pnr);
        Amount.setText(String.valueOf(amount));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Pnr = new javax.swing.JTextField();
        Amount = new javax.swing.JTextField();
        Payment_ID = new javax.swing.JTextField();
        pay = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("PAYMENT");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(165, 24, 96, 31);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PNR No");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(120, 80, 82, 28);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Amount");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(120, 130, 82, 26);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Payment ID");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(120, 180, 82, 31);

        Pnr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PnrActionPerformed(evt);
            }
        });
        getContentPane().add(Pnr);
        Pnr.setBounds(240, 80, 94, 30);
        getContentPane().add(Amount);
        Amount.setBounds(240, 130, 94, 30);
        getContentPane().add(Payment_ID);
        Payment_ID.setBounds(240, 180, 94, 30);

        pay.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        pay.setText("PAY");
        pay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payActionPerformed(evt);
            }
        });
        getContentPane().add(pay);
        pay.setBounds(79, 246, 101, 33);

        Cancel.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        Cancel.setText("CANCEL");
        Cancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });
        getContentPane().add(Cancel);
        Cancel.setBounds(243, 246, 101, 33);

        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\SSN\\Downloads\\MP_Images\\4.jpg")); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 520, 370);

        setSize(new java.awt.Dimension(447, 339));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void PnrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PnrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PnrActionPerformed

    private void refresh(){
        Pnr.setText("");
        Amount.setText("");
        Payment_ID.setText("");
    }
    private void payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payActionPerformed
        // TODO add your handling code here:
        try{
            String s = "select * from PAYMENT where Ticket_PNR = '"+pnr+"'";
            st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = st.executeQuery(s);
            if(rs.next()){
                JOptionPane.showMessageDialog(this, "Already Paid");
            }
            else{
                if(Pnr.getText().equals("") || Amount.getText().equals("")  || Payment_ID.getText().equals("") ){
                        JOptionPane.showMessageDialog(this,"Invalid Input!");
                }
                else{
                    try{
                        String sql ="insert into PAYMENT values(?,?,?)";
                        ps=con.prepareStatement(sql);
                        ps.setString(1,Payment_ID.getText());
                        ps.setString(2,Pnr.getText());
                        ps.setInt(3,Integer.parseInt(Amount.getText()));
                        //System.out.println(Payment_ID.getText());
                        ps.execute();
                        JOptionPane.showMessageDialog(this,"PAID Successfully");
                    }
                    catch(SQLException ex){
                        Logger.getLogger(Insert_User_Details.class.getName()).log(Level.SEVERE,null, ex);
                        JOptionPane.showMessageDialog(this,ex.getMessage());
                    }
                    this.dispose();
                    User U =new User();
                    U.show();
                }
                
            }

        }
        catch(Exception ex){
           Logger.getLogger(Insert_User_Details.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(this, ex.getMessage());
           
        }
        
        try {
            
          
            
            CallableStatement stat = con.prepareCall("{call modify_status(?,?,?)}");
            stat.setString(1, tr_no);
            stat.setInt(2,c1);
            stat.registerOutParameter(3,Types.VARCHAR);
            stat.execute(); // Use execute() instead of executeQuery()
            temp = stat.getString(3);
            System.out.println(c1);
            System.out.println(temp);
        } catch (Exception ex) {
            System.out.println(ex);
        }
        
        try {
            CallableStatement stat = con.prepareCall("{call modify_capacity(?,?)}");
            stat.setString(1, (String) tr_no);
            stat.setInt(2,c1);
            stat.execute(); // Use execute() instead of executeQuery()
            } catch (Exception ex) {
            System.out.println(ex);
            }
        
        try{
            String s = "select * from TICKET_STATUS where Ticket_PNR = '"+pnr+"'";
            st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = st.executeQuery(s);
            if(rs.next()){
                //JOptionPane.showMessageDialog(this, "Already Paid");
            }
            else{
                    try{
                        String sql ="insert into TICKET_STATUS values(?,?,?)";
                        ps=con.prepareStatement(sql);
                        ps.setString(1,Pnr.getText());
                        ps.setString(2,tr_no);
                        ps.setString(3,temp);
                       // System.out.println(temp);
                        //ps.setString(1,);
                        
                        ps.execute();
                        //JOptionPane.showMessageDialog(this,"PAID Successfully");
                    }
                    catch(SQLException ex){
                        Logger.getLogger(Insert_User_Details.class.getName()).log(Level.SEVERE,null, ex);
                        JOptionPane.showMessageDialog(this,ex.getMessage());
                    }
                }

        }
        catch(Exception ex){
           Logger.getLogger(Insert_User_Details.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(this, ex.getMessage());
           
        }
    }//GEN-LAST:event_payActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
       
       
            try{
                String sql1 = "select * from TICKET_BOOKS  where Ticket_PNR = '"+Pnr.getText()+"'";
                st1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rs1 = st1.executeQuery(sql1);
                if(rs1.next()){
                    String sql = "DELETE FROM TICKET_BOOKS where Ticket_PNR = '"+Pnr.getText()+"'";
                    st2 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    rs2 = st2.executeQuery(sql);
                    JOptionPane.showMessageDialog(this, "Ticket ID Deleted");
                    refresh(); 
                }
                else{
                    JOptionPane.showMessageDialog(this, "Ticket ID Not Exists!");
                }
            }
            catch(Exception ex){
               Logger.getLogger(Insert_User_Details.class.getName()).log(Level.SEVERE, null, ex);
               JOptionPane.showMessageDialog(this, ex.getMessage());
            }
            
        this.dispose();
        User U = new User();
        U.show();
    }//GEN-LAST:event_CancelActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Amount;
    private javax.swing.JButton Cancel;
    private javax.swing.JTextField Payment_ID;
    private javax.swing.JTextField Pnr;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton pay;
    // End of variables declaration//GEN-END:variables
}

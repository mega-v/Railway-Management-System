/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;
import javax.swing.*;
import java.sql.*;
import java.sql.Statement;
import static java.time.zone.ZoneRulesProvider.refresh;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author SSN
 */
public class UserLogin extends javax.swing.JFrame {
    Connection con;
    Statement st , st1, st2,st5 , st6;
    PreparedStatement ps;
    ResultSet rs, rs1 ,rs2, rs5 , rs6;
    String temp1;
    /**
     * Creates new form UserLogin
     */
    public UserLogin() {
        initComponents();
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            //JOptionPane.showMessageDialog(this,"Driver Loaded!");
            try {
                con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","Mega477553");
                //JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
            }
            catch (SQLException ex) {
                Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE,null, ex);
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
        catch(ClassNotFoundException ex){
            Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE,null, ex);
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        User_ID = new javax.swing.JTextField();
        Mobile_No = new javax.swing.JTextField();
        login = new javax.swing.JButton();
        signup = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Sign_out = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("            User Login");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(106, 25, 262, 33);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("      Username");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(90, 90, 108, 29);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("      Password");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(90, 150, 108, 28);

        User_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                User_IDActionPerformed(evt);
            }
        });
        getContentPane().add(User_ID);
        User_ID.setBounds(251, 90, 139, 29);

        Mobile_No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mobile_NoActionPerformed(evt);
            }
        });
        getContentPane().add(Mobile_No);
        Mobile_No.setBounds(250, 150, 139, 28);

        login.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        login.setText("Login");
        login.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        getContentPane().add(login);
        login.setBounds(100, 230, 110, 32);

        signup.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        signup.setText("Sign Up");
        signup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        signup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupActionPerformed(evt);
            }
        });
        getContentPane().add(signup);
        signup.setBounds(100, 301, 110, 34);

        clear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear);
        clear.setBounds(50, 380, 99, 33);

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(340, 380, 100, 33);

        Sign_out.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Sign_out.setText("Sign Out");
        Sign_out.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Sign_out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sign_outActionPerformed(evt);
            }
        });
        getContentPane().add(Sign_out);
        Sign_out.setBounds(290, 300, 100, 34);

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("Forget Password");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(250, 230, 140, 32);

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\SSN\\Downloads\\MP_Images\\3.jpg")); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(-720, 0, 1230, 480);

        setSize(new java.awt.Dimension(494, 467));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Mobile_NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mobile_NoActionPerformed
        // TODO add your handling code here:
        /*try{
        String alterTableQuery = "ALTER TABLE USERS ADD COLUMN login_attempts INT DEFAULT 0";
        st6 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
        rs6 = st.executeQuery(alterTableQuery);
        System.out.println("Hi    ");
        }
        catch(Exception ex){
            
        }
        // SQL statement to check login attempts
        String checkAttemptsQuery = "SELECT login_attempts FROM users WHERE User_ID = ?";

        String createTriggerQuery = "CREATE TRIGGER check_failed_login BEFORE UPDATE ON USERS "
        + "FOR EACH ROW BEGIN "
        + "IF NEW.Mobile_No <> OLD.Mobile_No THEN "
        + "SET NEW.login_attempts = OLD.login_attempts + 1; "
        + "END IF; "
        + "END";

// Execute the SQL statement
        try (Statement st1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE)) {
            st1.executeUpdate(createTriggerQuery);
        }
        catch(Exception ex){
            
        }
// Execute the SQL statement
        try (PreparedStatement preparedStatement = con.prepareStatement(checkAttemptsQuery)) {
            preparedStatement.setString(1, User_ID.getText());
            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                if (resultSet.next()) {
                    int loginAttempts = resultSet.getInt("login_attempts");
                    if (loginAttempts >= 3) {
                        JOptionPane.showMessageDialog(this," Input!");
                        // Handle the case when there have been three or more failed login attempts
                    } else {
                        // Continue with the login process
                    }
                } else {
                    // Handle the case when the username does not exist
                }
            }
        }
        catch(Exception ex){
            
        }*/
    }//GEN-LAST:event_Mobile_NoActionPerformed

    private void User_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_User_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_User_IDActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:   
        
        int p_flag=-1;
        try {
            CallableStatement stat = con.prepareCall("{call check_login_procedure(?,?,?)}");
            stat.setString(1, User_ID.getText());
            stat.setString(2,Mobile_No.getText());
            stat.registerOutParameter(3,Types.INTEGER);
            stat.execute(); // Use execute() instead of executeQuery()
            p_flag=stat.getInt(3);
         } 
        catch (Exception ex) {
            System.out.println(ex);
         }
        try {
            String sql = "select * from USERS where User_ID = '"+User_ID.getText()+"'";
            st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = st.executeQuery(sql);
            String sql1 = "select * from USERS where Mobile_No = '"+Mobile_No.getText()+"'";
            st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs1 = st.executeQuery(sql1);
            if(rs.next() && rs1.next() && p_flag == 2){
                User U = new User();
                U.show();
                U.call();
                this.dispose();
            }
            else if(p_flag==1){
                try{
                    JOptionPane.showMessageDialog(this, "Exceeded Maximum Login Attempts!\n Please Wait 30 Seconds");
                    TimeUnit.SECONDS.sleep(30);
                    refresh();
                }catch(Exception ex){
                    System.out.println(ex);
                }
            }
            else
                JOptionPane.showMessageDialog(this, "Invalid Login.");
        }
        catch (SQLException ex) {
            Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
        
        
        

    }//GEN-LAST:event_loginActionPerformed

    private void signupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupActionPerformed
        // TODO add your handling code here:
        Insert_User_Details UD = new Insert_User_Details();
        UD.show();
        this.dispose();
    }//GEN-LAST:event_signupActionPerformed
   
    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        User_ID.setText("");
        Mobile_No.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Login L = new Login();
        L.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Sign_outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sign_outActionPerformed
        // TODO add your handling code here:
        try{  
            String sql1 = "select * from USERS  where User_ID = '"+User_ID.getText()+"'";
            st5 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs5 = st5.executeQuery(sql1);
            if(rs5.next()){
                String sql = "DELETE FROM USERS where User_ID = '"+User_ID.getText()+"'";
                st6 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rs6 = st6.executeQuery(sql);
                JOptionPane.showMessageDialog(this, "Successfully Signed Out");
                User_ID.setText("");
                Mobile_No.setText("");
                //refresh(); 
            }
            else{
                JOptionPane.showMessageDialog(this, "User Not Exists!");
            }
            }
            catch(Exception ex){
               Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
               JOptionPane.showMessageDialog(this, ex.getMessage());
            }
    }//GEN-LAST:event_Sign_outActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        update_password up = new update_password();
        up.show();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Mobile_No;
    private javax.swing.JButton Sign_out;
    private javax.swing.JTextField User_ID;
    private javax.swing.JButton clear;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton login;
    private javax.swing.JButton signup;
    // End of variables declaration//GEN-END:variables
}
